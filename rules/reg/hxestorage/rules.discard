* @(#)90	1.1  src/htx/usr/lpp/htx/rules/reg/hxestorage/rules.discard, exer_storage, htxrhel7 7/7/16 00:20:46 

* Rule file for doing DISCARD operation along with other read/write IOs 
*---------------------------------------------------------------------------*
*- STANZA 1: Sequentially write a small portion of the disk (0 - 10% of the-*
*-           disk on 1st iteration of the rulefile).                       -*
*-           This stanza will create 4 threads which will run in the       -*
*-           background while other stanza in the rule are running.        -*
*-           Each thread will be covering a different section of the disk. -*
*- Th 1 : Does Sequential IO from LBA 0 to 0.1 * MaxBlk/4, proceed from    -*
*-        LBA # 0 --> LBA # 0.1 * Maxblks/4.                               -*
*- Th 2 : Does Sequential IO from LBA 0.1 * maxblks/4 to 0.1 * maxBlks/2,  -*
*-        LBA # 0.1 * Maxblks/2 --> LBA # 0.1 * Maxblks/4.                 -*
*- Th 3 : Does Sequential IO from LBA 0.1 * maxblks/2 to 0.1 * 3/4maxblks, -*
*-        proceed from LBA # 0.1 * Maxblks/2 --> LBA # 0.1 * 3/4maxblks.   -*
*- Th 4 : Does Sequential IO from 0.1 * maxblks to 0.1 * 3/4maxblks,       -*
*-        proceed from LBA # 0.1 * Maxblks --> LBA # 0.1 * 3/4Maxblks.     -*
*---------------------------------------------------------------------------*
rule_id = rule_1
pattern_id = #003
num_threads = 4
oper = bwrc
num_oper = 0
direction = UP DOWN
starting_block = BOT TOP
transfer_size = 256K
num_mallocs = 1
seek_breakup_prcnt = 0
section = yes
skip = -99999999

*---------------------------------------------------------------------------*
*- STANZA 2: Sleep for 2 minutes.                                          -*
*-           This lets the background thread (STANZA 1) initialize an area -*
*-           of the disk before the other rule stanzas start.              -*
*---------------------------------------------------------------------------*
rule_id = rule_2
oper = S
sleep = 120000000
skip = -99999999

*---------------------------------------------------------------------------*
*- STANZA 3: Creates 32 threads, 1 doing DRC (discard/read/compare) oper   -*
*- and rest doing WRC on random LBAs. IOs will be of random size between   -*
*- 1blk - 2MB for DRC threads and 1BLK - 128K for other threads.           -*
*---------------------------------------------------------------------------*
rule_id = rule_3
pattern_id = #003
associativity = SEQ
num_threads = 32
oper = drc rc wrc
num_oper = 10000
transfer_size = [1BLK-2MB,-1] [1BLK-128K,-1]
seek_breakup_prcnt = 100
