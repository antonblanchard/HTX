* Rule file for hxefpu64 exerciser running on P8 and above in combo mode.
* For details of rule keywords,please refer README.hxefpu64
* in /usr/lpp/htx/rules/reg/hxefpu64 dir on test machine.
*
* NOTE:Rule keyword & associated value should be all in one
*	line _only_. Currently '\n' (newline) is used as
*	delimiter to differentiate between keywords.
*
*

rule_id						fpu1
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
fpscr						[0,0,0,0,0,0,0,0]
data_bias_mask				[0xa,0xa0,0x55,0x1111111111,0xa,0xa0,0x55,0x1111111111]
ins_bias_mask				[(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100):(0x0100001fffffffff,100)]

rule_id						fpu2
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
fpscr						[0,0,0,0,0,0,0,0]
data_bias_mask				[0xa,0xa0,0x55,0x1111111111,0xa,0xa0,0x55,0x1111111111]
ins_bias_mask				[(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100):(0x02000000003fffff,100)]

rule_id						fpu3
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
fpscr						[0,0,0,0,0,0,0,0]
data_bias_mask				[0xa,0xa0,0x55,0x1111111111,0xa,0xa0,0x55,0x1111111111]
ins_bias_mask				[(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100):(0x030000001fffffff,100)]

rule_id						fpu4
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
fpscr						[0,0,0,0,0,0,0,0]
data_bias_mask				[0xa,0xa0,0x55,0x1111111111,0xa,0xa0,0x55,0x1111111111]
ins_bias_mask				[(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100):(0x0400000003ffffff,100)]

rule_id						cpu5
num_oper					1000 
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
INS_BIAS_MASK               [(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100):(0x0500000000003fff,100)]


rule_id						cpu6
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
INS_BIAS_MASK				[(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50):(0x0500000000003000,50)(0x0500000000000fff,50)]

rule_id						crazy7
num_oper					1000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[0,0,0,0,0,0,0,0]
fpscr						[0x3,0x2,0x1,0x0,0x3,0x2,0x1,0x0]
data_bias_mask				[0x1111111111,0x1111111111,0x1111111111,0x1111111111,0x1111111111,0x1111111111,0x1111111111,0x1111111111]
INS_BIAS_MASK				[(0x0500000000003fff,50)(0x0100001fffffffff,50):(0x0500000000003fff,50)(0x02000000003fffff,50):(0x0500000000003fff,50)(0x030000001fffffff,50):(0x0500000000003fff,50)(0x0400000003ffffff,50):(0x0500000000003fff,50)(0x0100001fffffffff,50):(0x0500000000003fff,50)(0x02000000003fffff,50):(0x0500000000003fff,50)(0x030000001fffffff,50):(0x0500000000003fff,50)(0x0400000003ffffff,50)]
