/* IBM_PROLOG_BEGIN_TAG */
/* 
 * Copyright 2003,2016 IBM International Business Machines Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 		 http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* IBM_PROLOG_END_TAG */
* %Z%%M%        %I%  %W% %G% %U%
***********************************************************************
* Rules1 file for async devices using hxeasy+ exerciser
* This is a threaded exerciser written in C++          
***********************************************************************
* HXEASY tests asynchronous ports by transferring data through
* the targeted port(s).  It can change port characteristics
* such as baud rate and parity dynamically during the test. It can
* also change test characteristics including the data packet size and
* and direction of data flow. It automatically configures the hardware 
* and software disciplines of a port.  Ports that are interconnected 
* with an appropriate cable are tested as easily as a port with a wrap 
* plug. (Restrictions: both ports must have equivalent rules files and 
* both ports must be on the same host.  Equivalent is defined as having
* the same NUM_OPER, NUM_CHARS, BUFSIZE, CBAUD, CHSIZE, CSTOPB, PARODD, 
* DIRECTION, etc.  Other parameters such as IHOG may be different.)
*
* The HXEASY rule file specifies the test characteristics for a port.
* This rule file is written in the standard HTX format -- "*" denoting
* a comment, keywords or rule identifiers are followed by "=" and 
* and their assigned values.  All entries in the rules file are
* converted to upper case before use.  All characteristics not specified
* in the rule file will use the default values specified below.
*
* When specifying the rule_file_name as an "hxeasy" argument, the file
* is searched for in the following order:
*    1. <<rule_file_name>> (local directory, relative or absolute path),
*    IF name doesn't start with a '.' or a '/' :
*    2. IF type is EMC  
*           ../rules/emc/asy/<<rule_file_name>>  
*       ELSE
*           ../rules/reg/asy/<<rule_file_name>>
*    3. $HTXRULES/<<rule_file_name>> where $HTXRULES 
*          is an exported environmental variable.
*
* This algorithm is included to help clarify the relationship between
* NUM_OPER, NUM_CHARS, BUFSIZE, and IOCTL_SLEEP when testing.
*    LoopForever
*        Setup test permutation and IOCTL_SLEEP as necessary
*        DoUntil NUM_OPER cycles are complete
*            DoUntil NUM_CHARS are I/O'd
*                I/O Min(BUFSIZE, Characters left)
*            EndLoop
*        EndLoop
*    EndLoop
*
* The following list is the complete set of rule identifiers recognized 
* by HXEASY:
* 
* RULE_ID
* String of 8 characters or less. No default value. This string denotes
* the rule identification which can be used by the tester to identify
* the test.  This RULE_ID will be displayed by the HTX main exerciser 
* and will be written to the error log with the errors stanzas.
* 
* PATTERN_ID
* String of 8 upper-case characters or less. There is no default value. 
* The pattern file contains data patterns that are written/read from the 
* target port(s).  The pattern file will be copied multiple times or it 
* will be truncated as required to fill the buffer (size specified by 
* NUM_CHARS).  The pattern file is searched for in the following order:
*    1. ./<<pattern_id>>, 
*    2. ../pattern/<<pattern_id>>, 
*    3. $HTXPATTERN/<<pattern_id>> where $HTXPATTERN is an exported
*       environmental variable.
* 
* NUM_OPER
* Integer value, must be greater than 0.  This represents the number of 
* I/O operations to be performed at each setting of baud, word size, 
* stop bits, and parity.  A large number will generally yield a more 
* stressful test but will also result in taking more time at each 
* permutation of the rules file settings.
*
* BUFSIZE
* Integer value, must be 1 or greater (default 10).  BUFSIZE specifies 
* the write/read buffer size in bytes. This is maximum number of bytes 
* read/written during each IO operation.  That is, each read/write 
* performed on the ports receives/sends a maximum of BUFSIZE bytes. This 
* is different from the NUM_CHARS rule which specifies the total number of
* characters to be read/written during one I/O test sequence.  
*
* IOCTL_SLEEP
* Integer. Default value is 1000000 (1 seconds).
* Sleep time is given in microseconds and is performed between flush ioctls. 
* Under heavy loads, if miscompares are occurring on the first num_oper of
* of each pass, increase the IOCTL_SLEEP.                            
*
* SPECIAL
* Set SPECIAL=W when you want to just write data out a port with no
* cable or wrap plug, to do signal testing. 
* 
* CLOCAL
* One character, Y|N (default is N). (Y) Yes ignore modem line condition.
* (N) No do not ignore modem line condition.
* 
* IGN_BRK
* One character, value must be Y|N (default is N). (Y) Yes ignore break 
* condition.  Break characters not put on input queue and thus not read. 
* (N) do not ignore break condition. 
* 
* HUPCL
* One character, value must be Y|N (default is Y).  (Y) Disconnect when 
* last process closes open port. (N) do not disconnect on last close.
* 
* BRK_INT
* One character, value must be Y|N (default is N). (Y) break condition 
* generates an interrupt and flushes both input and output queues. 
* (N) break does not generate interrupts.  Appropriate value will be set 
* in termios structure but actions on receipt of a break are not supported.
* 
* IGN_PAR
* One character, value must be Y|N (default is N). (Y) Characters with 
* framing and parity errors are ignored. (N) Do not ignore framing or 
* parity errors. 
* 
* PAR_MARK
* One character, value must be Y|N (default is N). (Y) characters with 
* framing or parity error are read as 3-character sequences 0377, 0, x, 
* where x is the character received in error.  (N) Character with 
* framing or parity error is read as the character NULL. Appropriate values
* will be set in the termios structure, however character sequences 
* inserted into the read stream will be treated the same as all other 
* characters by the exerciser.  It is up to the user to identify this
* marking when the exerciser marks a miscompare.
* 
* IXON
* One character, value must be Y|N (default N).  (Y) enable start and stop
* output control. (N) disable start and stop output control.  Care must be
* taken to not have ^S and ^Q in the pattern file.  When using CHSIZE=5, 
* the pattern file ASCII will be masked to 5 bits and ^S and ^Q characters
* will be transmitted and you get an exit code 18.  See the exerciser 
* manual for additional details.
* 
* IXOFF
* One character, value must be Y|N (default N). (Y) transmit start or stop
* characters when input queue nears low or high water marks. 
* (N) do not transmit start and stop characters. 
* 
* CBAUD
* Sequence of 1 to 13 integers. Values must be  50| 75| 110| 134| 150|
* 200| 300| 600| 1200|  1800| 2400| 4800| 9600| 19200| 38400| 57600| 76800|
* 115200.  9600 is the default. The 3 high rates are for ibm7318 server,
* creek(isa 8port) only. Frio (isa 128port) supports up to 57600 only. 
* A negative number represents data in  half-duplex mode.   
* If a baud rate is not specified as negative, testing is full-duplex. 
* The exerciser will not perform half-duplex on wrap_plugs.  If a negative
* baud rate is specified on a wrap-plug, that setting is skipped.  When
* using full-duplex, there is a danger of blocking and exiting with
* an exit code of 18.  See the exerciser manual for additional 
* information.
* 
* CHSIZE
* Sequence of 1 to 4 integers. Values must be  5|6|7|8 (default is 7). 
* Specifies character bit sizes. 
* 
* CSTOPB
* Sequence of 1 to 2 integers. Values must be 1|2 (default is 2). 
* Specifies 1 one stop bit or 2 two stop bits.
* 
* PARODD
* Sequence of 1 to 3 characters. Values must be 'O'|'E'|'N' (default is N).
* Parity check. (O) generate parity bit for odd check. (E) generate parity
* bit for even check. (N) no parity bit generation. 
* 
* NUM_CHARS
* Integer value, between 1 and 32767 (default is 255). Number of characters
* to be read/written during each I/O cycle. See the entry BUFSIZE.
*
* HW_PACING
* Default is RTS line discipline.  Acceptable values are RTS, DTR, or NONE.
* If NONE is specified and IXON, IXOFF are set to 'N' (the default), 
* errors can be expected due to the lack of handshaking/flow control.  
* DTR line discipline only supports output flow control and thus can't be 
* used for normal wrap testing.  DTR line discipline can be used for 
* testing on the 128 port if DTRPACE_ON is set as explained under 128P 
* below.
*
* 128P
* This is used only for 128 port ttys.  It has no effect on other async 
* devices.  The default is ALTPIN_ON, FASTCOOK_ON, DTRPACE_OFF mode.  
* Other acceptable values are ALTPIN_OFF, FASTCOOK_OFF, DTRPACE_ON.
* DTRPACE_ON sets dtrpace in the cxma discipline.  It is intended to be
* set to on only when checking DTR line discipline.  This will allow
* using cable test with the DTR discipline.  DTR line discipline only
* sets up dcdpace and will drop data without setting DTRPACE_ON.
* These apply for both isa 8 port and isa 128port. 
*
* DIRECTION
* When testing half-duplex, the direction of the first write is from the
* low tty port number to the higher tty number.  If it is desired to 
* start the writes from the opposite port, set DIRECTION to REVERSED.
* The acceptable values are DEFAULT and REVERSED (default is DEFAULT).
*
* IHOG
* IHOG value may be increase to accommodate interoperability testing.
* If IHOG is used it should be greater than 512.
*
* SLEWRATE
* This applies to the network terminal server only..... ibm7318
* Character string with value of "SLOW", "MEDIUM" or "FAST". 
* Default is "FAST", becuase fast will work with all baud rates although it
* does get inefficient for lower baud rates. "SLOW" will only work up to
* 2400 buad, "MEDIUM is for 4800-38400 and "FAST" is for the higher rates.
*
* VMIN
* This integer value between 0 and NUM_CHARS (default 1) will be used 
* To set the VMIN value for the tty reads.  The setting of this value will
* affect performance. The best performacne will be achieved when vmin =
* NUM_CHARS. Then the cpu will have to service fewer reads. 
*
* How to obtain high utilization on the adapter-to-concentrator link or 
* a concentrator:  To obtain high throughputs use a large NUM_OPER.  There
* will be a very significant overhead in setting up a new set of parameters
* but the exerciser will perform NUM_OPER I/Os at each setting before 
* setting up the next parameters.  If there are no errors while testing, 
* NUM_OPER I/Os will have occurred without any sleep times inserted 
* between the read and writes.
*
* 
* THIS IS A RULES FILE FOR A SINGLE PORT ON AN 8 PORT ADAPTER.
* IN ORDER TO TEST ALL PORTS, ONE OF THESE SHOULD BE RUN FOR EACH PORT
* NOTE: the baud rate is set for very loaded systems. If your cpu is not
* running a full load you can increase the baud rate up to 19200
* or until you start getting overruns in the errorlog.
RULE_ID =128PORT
PATTERN_ID=HEX255
NUM_OPER=1
IGN_BRK=N
BRK_INT=N
IGN_PAR=N
PAR_MARK=N
IXON=N
IXOFF=N
CBAUD = 230000 19200 
CHSIZE=8 7
CSTOPB=1
PARODD=E O N
NUM_CHARS=255
